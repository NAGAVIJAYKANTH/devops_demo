 DATA TYPES:
number,string,boolean,undifined
 NUMBERS:
var data=1.5;
consoke.log(typeof data);
 STRING:
var data="vija";
console.log(typeof data);
 BOOLEAN:
var data=true;
console.log(typeof data);
 UNDIFIND:
var data=(dont anter any data that type is called undifind data type);
console.log(typeof data);
 ARRAYS AND OBJECTS:(more than one values that type is called arrays)
var data=[1,2,3,4,5,6];
console.log(data);
 index position type:
var data=[1,2,3,4,5];
console.log(data[1]);
objects:
var data={
name:'vijay',
age:19
}
console.log(data.name)or(data.age)
 FUNCTIONS:
function user(){
console.log('hello');
}
user();
(same value assign same function type)
function user(num1){
consloe.log(num1);
}
user(10);
 return type:(program)
function user(num1){
return num1+5;
}
var output=user(10)
console.log(output);
CONDITIONAL STATEMENTS:(if,if else,else if)
if condition:
var marks=75;
if(marks>s){
console.log('grade A')
}
if else condition:
var marks=85;
if(marks>70){
console.log('grade A')
}
else{
console.log('grade B')
}
else if condition:
var marks=40;
if(marks>80)
{
console.log('grade A')
}
else if(marks>55)
{
console.log('grade B')
}
else{
console.log('grade C')
}
LOOPING CONCEPTS:(for loop,while loop)
syntax:
for(varible_declaration,;conditon;inc/dec){
}
for loop:
for(i=1;i<5;i++)
{
console.log(i);
}
2)var output=0;
for(var i=1;i<=10;i++){
output=output+i;
}
console.log(output);
WHILE LOOP:
var output=0;
while(output<=10){
console.log(output);
output++;
}
ES5 version:
Array features:   Json feateres:   Data features:
isArray()         srteingfy()      valueOf()
map()
filter()
forEach()
some()
indexOf()
lastindexOf()

ISARRAY():(it is used to identify the array)
var data=[1,2,3,4]
console.log(Array.isArray(dat));
MAP():(is used to modify and hydrate in the array)
var data=[1,2,3,4]
data.map(
function(element){
console.log(element)
}
)
answer:
1
2
3
4
2)var data=[1,2,3,4]
var output=data.map(
function(element){
return element+1;
}
)
console.log(output)
answer:(4)[2,3,4,5]
FIETER():(using in condition to change value)
var data=[1,2,3,4]
var output=data.fileter(
function(element){
return element>2;
}
)
console.log(output)
answer:(2)[3,4]
FOREACH():
var data=[1,2,3,4]
data.forEach(
function(element){
console.log(element)
}
)
answer:
1
2
3
4
EVERY():
var data=[1,2,3,4]
var output=data.every(
function(element){
return element>2;
}
)
console.log(output)
answer:
false
SOME():
var data=[1,2,3,4]
var output=data.some(
function(element){
return element>2;
}
)
console.log(output)
answer:
true
IndexOf():(index position)
var dat=[1,2,3,4]
console.log(data.indexOf(4))
answer:3
lastindexOf():
var data[1,2,3,4,5,6,4]
console.log(data.lastindexOf(4))
answer:6
STRINGIFY():
var data={
name:'vijay',
age:19}
var json=json.stringify(data);
console.lof(json);
answer:{"name":"vijay","age":"19"}
VALUEOF():(time seeing in millyseconds
var date=new date();
console.log(date.valueOf());
answer:163738474499
ES6/ECMAScript 2015:
Let&const
Arrow Function
Classes
For..of
Default parameter
Rest Operator
Spread Operator
Destructring

let&const:(let is used to declare the value in side the block)
{
let data=10;
console.log(data)
}
answer:10
const:(dont reassing same data type in a perticlur program)
const dat=10;
data=20;
console.log(data);
answer:error assingt to constanst varible
Arrow function():
const user=(num1)=>{return num1+5}
var output=user(10);
console.log(output);
answer:15
Class:
class use{
constructor(msg){
this.msg=msg;
}
admin(){
consloe.log(this.msg)
}
}
let obj=new user('hi');
let obj2=new user('hello');
obj2.admin();
answer:hello
timing(59:16)











 





